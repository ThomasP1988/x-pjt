// @generated by protobuf-ts 2.2.2
// @generated from protobuf file "orderbook.proto" (package "orderbooks", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Orderbooks } from "./orderbook";
import type { OrderListResult } from "./orderbook";
import type { OrderListArgs } from "./orderbook";
import type { CancelOrderArgs } from "./orderbook";
import type { Order } from "./orderbook";
import type { OrderArgs } from "./orderbook";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Prices } from "./orderbook";
import type { SubscribeL2Args } from "./orderbook";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service orderbooks.Orderbooks
 */
export interface IOrderbooksClient {
    /**
     * @generated from protobuf rpc: SubscribeL2(orderbooks.SubscribeL2Args) returns (stream orderbooks.Prices);
     */
    subscribeL2(input: SubscribeL2Args, options?: RpcOptions): ServerStreamingCall<SubscribeL2Args, Prices>;
    /**
     * rpc OrderBidi(stream OrderArgs) returns (stream Order) {};
     *
     * @generated from protobuf rpc: ProcessOrder(orderbooks.OrderArgs) returns (orderbooks.Order);
     */
    processOrder(input: OrderArgs, options?: RpcOptions): UnaryCall<OrderArgs, Order>;
    /**
     * @generated from protobuf rpc: CancelOrder(orderbooks.CancelOrderArgs) returns (orderbooks.Order);
     */
    cancelOrder(input: CancelOrderArgs, options?: RpcOptions): UnaryCall<CancelOrderArgs, Order>;
    /**
     * @generated from protobuf rpc: OrderList(orderbooks.OrderListArgs) returns (orderbooks.OrderListResult);
     */
    orderList(input: OrderListArgs, options?: RpcOptions): UnaryCall<OrderListArgs, OrderListResult>;
}
/**
 * @generated from protobuf service orderbooks.Orderbooks
 */
export class OrderbooksClient implements IOrderbooksClient, ServiceInfo {
    typeName = Orderbooks.typeName;
    methods = Orderbooks.methods;
    options = Orderbooks.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: SubscribeL2(orderbooks.SubscribeL2Args) returns (stream orderbooks.Prices);
     */
    subscribeL2(input: SubscribeL2Args, options?: RpcOptions): ServerStreamingCall<SubscribeL2Args, Prices> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SubscribeL2Args, Prices>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * rpc OrderBidi(stream OrderArgs) returns (stream Order) {};
     *
     * @generated from protobuf rpc: ProcessOrder(orderbooks.OrderArgs) returns (orderbooks.Order);
     */
    processOrder(input: OrderArgs, options?: RpcOptions): UnaryCall<OrderArgs, Order> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<OrderArgs, Order>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CancelOrder(orderbooks.CancelOrderArgs) returns (orderbooks.Order);
     */
    cancelOrder(input: CancelOrderArgs, options?: RpcOptions): UnaryCall<CancelOrderArgs, Order> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CancelOrderArgs, Order>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: OrderList(orderbooks.OrderListArgs) returns (orderbooks.OrderListResult);
     */
    orderList(input: OrderListArgs, options?: RpcOptions): UnaryCall<OrderListArgs, OrderListResult> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<OrderListArgs, OrderListResult>("unary", this._transport, method, opt, input);
    }
}
